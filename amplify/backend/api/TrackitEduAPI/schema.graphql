

type vodAsset @model (subscriptions: {level: public})
@auth(
  rules: [
    {allow: groups, groups:["Admin"], operations: [create, update, delete, read]},
    {allow: private, operations: [read]}
  ]
)
{
  id:ID!
  title:String!
  description:String!
  highlighted:Boolean!

  #DO NOT EDIT
  video:videoObject @connection
  thumbnail:thumbnailObject @connection
  sections:[VideoSection] @connection(keyName: "byVideo", fields: ["id"])
}

#DO NOT EDIT
type videoObject @model
@auth(
  rules: [
    {allow: groups, groups:["Admin"], operations: [create, update, delete, read]},
    {allow: private, operations: [read]}
  ]
)
{
  id:ID!

  token: String @function(name: "TrackitEduVOD-prod-tokenGen")
}

type thumbnailObject @model
@auth(
  rules: [
    {allow: groups, groups:["Admin"], operations: [create, update, delete, read]},
    {allow: private, operations: [read]}
  ]
)
{
  id:ID!
}

type section @model
@auth(
  rules: [
    {allow: groups, groups:["Admin"], operations: [create, update, delete, read]},
    {allow: private, operations: [read]}
  ]
)
{
  id:ID!
  label:String!
  videos:[VideoSection] @connection(keyName: "bySection", fields: ["id"])
}

type VideoSection @model(queries: null)
@key(name: "bySection", fields: ["sectionID", "videoID"])
@key(name: "byVideo", fields: ["videoID", "sectionID"]) {
  id: ID!
  sectionID: ID!
  videoID: ID!
  section: section! @connection(fields: ["sectionID"])
  video: vodAsset! @connection(fields: ["videoID"])
}

